/*!
 * javascript-lp-solver 0.4.24
 * Licensed under MIT (https://github.com/JWally/jsLPSolver/blob/master/LICENSE)
 */
(function(global){
  var solver = (function(){
    function clone(obj){
      return JSON.parse(JSON.stringify(obj));
    }

    function Solve(model){
      // Basic validation
      if (!model || !model.optimize || !model.opType || !model.constraints || !model.variables){
        throw new Error("Invalid model format.");
      }

      // Simplified solver logic for testing purposes only
      // You can later replace this with full Simplex implementation or extend
      return {
        feasible: true,
        result: 0,
        bounded: true,
        // this is a mock
        solution: Object.fromEntries(Object.keys(model.variables).map(k => [k, 0]))
      };
    }

    return {
      Solve,
      clone
    };
  })();

  // âœ… Export globally
  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
    module.exports = solver;
  } else {
    global.solver = solver;
  }
})(typeof window !== 'undefined' ? window : global);
